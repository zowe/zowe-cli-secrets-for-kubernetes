{
    "name": "@zowe/secrets-for-kubernetes-for-zowe-cli",
    "version": "0.0.1",
    "description": "Kubernetes secrets plugin for Zowe CLI",
    "author": "Zowe",
    "license": "EPL-2.0",
    "keywords": [
        "credential manager",
        "secure store",
        "password"
    ],
    "publishConfig": {
        "registry": "https://zowe.jfrog.io/zowe/api/npm/npm-local-release/"
    },
    "repository": "https://github.com/zowe/zowe-cli-secrets-for-kubernetes",
    "files": [
        "lib",
        "scripts"
    ],
    "main": "lib/src/index.js",
    "typings": "lib/src/index.d.ts",
    "imperative": {
        "configurationModule": "lib/src/imperative/configuration.js"
    },
    "scripts": {
        "clean": "rimraf lib",
        "checkTestsCompile": "echo \"Checking that test source compiles...\" && tsc --project __tests__/test-tsconfig.json --noEmit ",
        "circularDependencyCheck": "madge -c lib",
        "lint": "eslint \"src/**/*.ts\" \"**/__tests__/**/*.ts\"",
        "lint:src": "eslint \"src/**/*.ts\" --ignore-pattern \"**/__tests__/**/*.ts\"",
        "lint:tests": "eslint \"**/__tests__/**/*.ts\"",
        "prebuild": "npm run clean && npm run lint && echo Using TypeScript && tsc --version",
        "build": "tsc --pretty && npm run checkTestsCompile && npm run circularDependencyCheck",
        "prepublishOnly": "npm run build && bash ./scripts/bundleKeytar.sh",
        "watch": "tsc --pretty --watch",
        "watch:test": "jest --watch",
        "installPlugin": "npm install && npm run clean && npm run build && zowe plugins install .",
        "postuninstall": "echo \"CLI Profiles that you have created will need to be recreated because their credentials are stored in the credential manager that has been uninstalled. Refer to the available options in the help text to create a new profile 'zowe profiles create zosmf-profile -h'.\" 1>&2",
        "typedoc": "typedoc --out ./docs/typedoc/ ./src/ --disableOutputCheck",
        "test": "npm run test:unit && npm run test:system",
        "test:cleanResults": "rimraf __tests__/__results__",
        "test:unit": "env-cmd -f __tests__/__resources__/env/unit.env jest --coverage --testPathIgnorePatterns \".*/__system__/.*\" ",
        "test:system": "env-cmd -f __tests__/__resources__/env/system.env jest .*/__system__/.* --coverage false --runInBand",
        "coverage": "jest --coverage",
        "package": "npm run clean && node ../../scripts/updateLicenses.js && npm run build && npm pack --pack-destination ../../dist"
    },
    "peerDependencies": {
        "@zowe/cli": "^7.13.0",
        "@zowe/imperative": "^5.12.0",
        "@zowe/cli-test-utils": "^7.13.0"
    },
    "dependencies": {
        "@kubernetes/client-node": "0.18.1"
    },
    "jest": {
        "setupFilesAfterEnv": [
            "./__tests__/setUpJest.ts"
        ],
        "modulePathIgnorePatterns": [
            "__tests__/__snapshots__/"
        ],
        "testPathIgnorePatterns": [
            "<rootDir>/__tests__/__results__"
        ],
        "transform": {
            ".(ts)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*\\.(test|spec))\\.(ts|js)$",
        "moduleFileExtensions": [
            "ts",
            "js"
        ],
        "testEnvironment": "node",
        "collectCoverageFrom": [
            "src/**/*.ts",
            "!**/__tests__/**",
            "!**/index.ts",
            "!**/main.ts"
        ],
        "collectCoverage": false,
        "reporters": [
            "default",
            "jest-junit",
            "jest-stare",
            "jest-html-reporter"
        ],
        "coverageReporters": [
            "json",
            "lcov",
            "text",
            "cobertura"
        ],
        "coverageDirectory": "<rootDir>/__tests__/__results__/unit/coverage"
    },
    "jest-stare": {
        "resultDir": "<rootDir>/__tests__/__results__/jest-stare"
    },
    "jest-junit": {
        "outputDirectory": "<rootDir>/__tests__/__results__/unit/junit"
    },
    "jest-html-reporter": {
        "pageTitle": "Kubernetes secrets Plugin for Zowe CLI Test Results",
        "outputPath": "<rootDir>/__tests__/__results__/results.html",
        "includeFailureMsg": true
    }
}
